---
import { getCollection } from 'astro:content'
import PostContent from '../../layouts/PostContent.astro'
import { blogConfig } from '#'
import ContentTOC from '@/components/ContentTOC.astro'
import PostCategory from '@/components/PostCategory.astro'

export async function getStaticPaths() {
  const postEntries = await getCollection('posts')

  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }))
}

const { entry } = Astro.props

const weatherIcon =
  blogConfig.markdown.weathers[
    entry.data.weather as keyof typeof blogConfig.markdown.weathers
  ]
const pubDate = entry.data.pubDate.toLocaleDateString('zh-CN', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
})

const { Content, headings } = await entry.render()
---

<PostContent title={entry.data.title}>
  <div
    class="mb-xs grid cols-1 md:mx-xs md:cols-[32rem_1fr] lg:cols-[48rem_1fr] xl:cols-[1fr_42rem_1fr] gap-xs"
  >
    <aside class="hidden xl:block"></aside>
    <main>
      <header class="my-16 text-var-md-heading mx-xs lg:mx-0">
        <h1>
          <span>{entry.data.title}</span>
        </h1>
        <span class="text-lg font-normal inline-flex items-center gap-xs">
          <i class={`${weatherIcon} text-xl`}></i>
          <time>{pubDate}</time>
        </span>
      </header>

      <article class="markdown">
        <Content />
      </article>

      <hr class="divider" />

      <footer class="px-xs">
        <ul class="pl-0 list-none text-var-font-primary/80">
          <PostCategory category={entry.data.categories[0]} />
        </ul>
      </footer>
    </main>
    <aside class="hidden md:block">
      <ContentTOC title={entry.data.title} headings={headings} />
    </aside>
  </div>
</PostContent>
