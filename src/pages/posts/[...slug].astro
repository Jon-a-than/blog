---
import { getCollection } from 'astro:content'
import PostContent from '../../layouts/PostContent.astro'
import { weatherIcons } from '@/config'
import ContentTOC from '@/components/ContentTOC.astro'

export async function getStaticPaths() {
  const blogEntries = await getCollection('posts')
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }))
}

const { entry } = Astro.props

const { Content, headings } = await entry.render()
---

<PostContent>
  <div
    class="mb-xs grid cols-1 md:mx-xs md:cols-[32rem_1fr] lg:cols-[48rem_1fr] xl:cols-[1fr_42rem_1fr] gap-xs"
  >
    <aside class="hidden xl:block">
      <!-- <ul class="text-night-1 line-height-6">
        {
          headings.map(({ depth, text }) => {
            return (
              <li style={`margin-left: ${depth * 1}em`} class="">
                {text}
              </li>
            )
          })
        }
      </ul> -->
    </aside>
    <main>
      <header class="my-16 text-frost-4 mx-xs lg:mx-0">
        <h1>
          <span>{entry.data.title}</span>
        </h1>
        <span class="text-lg font-normal inline-flex items-center gap-xs">
          <i class={`${weatherIcons[entry.data.weather]} text-xl`}></i>
          <time>
            {
              entry.data.pubDate.toLocaleDateString('zh-CN', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })
            }
          </time>
        </span>
      </header>
      <article class="markdown">
        <Content />
      </article>

      <footer>
        <section class="text-base pa-xs rounded-lg bg-snow-4 dark:bg-night-4">
          <h2 id="comments" class="text-lg font-bold my-0">comments</h2>
        </section>
      </footer>
    </main>
    <aside class="hidden md:block">
      <ContentTOC title={entry.data.title} headings={headings} />
    </aside>
  </div>
</PostContent>
